scalar DateTime

interface PlayerInfo {
  id: ID!
  name: String!
  color: String!
}

type Player implements PlayerInfo {
  id: ID!
  name: String!
  color: String!
  worlds: [World]
}

type Message {
  id: ID!
  author: PlayerInfo!
  createdAt: DateTime!
  text: String
  rolls: [ID]
}

input MessageInput {
  text: String
}

type Query {
  v: Int
}

type Mutation {
  sendMessage(worldId: ID!, input: MessageInput!): Message
}

type Subscription {
  newMessages(worldId: ID!): [Message]!
}
