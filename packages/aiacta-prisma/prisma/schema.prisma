datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider      = "prisma-client-js"
  output        = "./"
  binaryTargets = ["linux-arm-openssl-1.1.x", "debian-openssl-1.1.x", "native"]
}

model Player {
  id              String          @id @default(cuid())
  name            String          @unique
  password        String
  color           String          @default("white")
  worlds          PlayerInWorld[]
  worldsCreated   World[]         @relation("creator")
  worldsInvitedTo World[]
  chatMessages    ChatMessage[]
}

model World {
  id             String          @id @default(cuid())
  name           String          @unique
  creator        Player          @relation("creator", fields: [creatorId], references: [id])
  creatorId      String
  players        PlayerInWorld[]
  messages       ChatMessage[]
  inviteOnly     Boolean         @default(true)
  joinKey        String?
  playersInvited Player[]
  password       String?
  createdAt      DateTime        @default(now())
  scenes         Scene[]
}

enum Role {
  GAMEMASTER
  USER
}

model PlayerInWorld {
  player   Player @relation(fields: [playerId], references: [id])
  playerId String
  world    World  @relation(fields: [worldId], references: [id])
  worldId  String

  role     Role     @default(USER)
  joinedAt DateTime @default(now())

  @@id([playerId, worldId])
}

model ChatMessage {
  id        String   @id @default(cuid())
  world     World    @relation(fields: [worldId], references: [id])
  worldId   String
  text      String?
  author    Player   @relation(fields: [authorId], references: [id])
  authorId  String
  createdAt DateTime @default(now())
  rolls     String[] // Ids
}

model Scene {
  id          String   @id @default(cuid())
  world       World    @relation(fields: [worldId], references: [id])
  worldId     String
  createdAt   DateTime @default(now())
  name        String
  image       Bytes?
  width       Int
  height      Int
  walls       Json[]
  lights      Json[]
  gridSize    Int
  gridOffsetX Int      @default(0)
  gridOffsetY Int      @default(0)
}
